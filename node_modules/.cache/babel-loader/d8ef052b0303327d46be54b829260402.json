{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sarahrockhill/Desktop/UIUX/Development/src/Cart.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './style.css';\n/**\n * The cart handles the logic of displaying all items in cart, as well as aggregating the total price\n * of all items. It allows the user to add more or remove items from their cart.\n */\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addToCart = item => {\n      this.props.addToCart(item);\n    };\n\n    this.removeFromCart = item => {\n      this.props.removeFromCart(item);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card sticky-top cart-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        type: \"text/css\",\n        children: ` .btn-black-outline { background-color: white;\n                                            border: 2px solid black;\n                                            margin: 5px;}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center card-header\",\n        children: \" My Cart \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: Object.keys(this.props.cart).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [key, \" x \", this.props.cart[key].quantity, \" | $\", +this.props.cart[key].item.price * this.props.cart[key].quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"black-outline\",\n                onClick: () => this.removeFromCart(this.props.cart[key].item),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"black-outline\",\n                onClick: () => this.addToCart(this.props.cart[key].item),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"text-center subtotal mt-1\",\n            children: [\"Subtotal: $\", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: Object.keys(this.props.cart).reduce((a, b) => a + this.props.cart[b].item.price * this.props.cart[b].quantity, 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/sarahrockhill/Desktop/UIUX/Development/src/Cart.js"],"names":["React","Button","Cart","Component","constructor","props","addToCart","item","removeFromCart","render","Object","keys","cart","map","key","quantity","price","fontWeight","reduce","a","b"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './style.css';\n\n\n/**\n * The cart handles the logic of displaying all items in cart, as well as aggregating the total price\n * of all items. It allows the user to add more or remove items from their cart.\n */\nclass Cart extends  React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    addToCart = (item) => {\n        this.props.addToCart(item);\n    }\n\n    removeFromCart = (item) => {\n        this.props.removeFromCart(item);\n    }\n\n    render() {\n        return (\n            <div className=\"card sticky-top cart-div\">\n                {/*for some reason i had to have this style portion here for my variants to work*/}\n                <style type=\"text/css\">\n                    {` .btn-black-outline { background-color: white;\n                                            border: 2px solid black;\n                                            margin: 5px;}`}\n                </style>\n\n                <h4 className=\"text-center card-header\"> My Cart </h4>\n                <div className=\"card-body\">\n                    {/*maps each item in cart to a div that displays name, quantity, and price x quantity */}\n                    {Object.keys(this.props.cart).map(key  =>\n                        <div className=\"row p-2\">\n                            <div className=\"col\">\n                                <div className=\"text-center\">\n                                    {/*name X quantity*/}\n                                    {key} x {this.props.cart[key].quantity} | $\n\n                                    {/*calculation of price for that given item*/}\n                                    { + this.props.cart[key].item.price * this.props.cart[key].quantity}\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\" text-center\">\n                                    {/*buttons for adding or removing items from cart*/}\n                                    <Button variant=\"black-outline\"\n                                            onClick={() => this.removeFromCart(this.props.cart[key].item)}>\n                                        -\n                                    </Button>\n                                    <Button\n                                            variant=\"black-outline\"\n                                            onClick={() => this.addToCart(this.props.cart[key].item)}>\n                                        +\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n\n                    )}\n                </div>\n                {/*aggregation component: */}\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h6 className=\"text-center subtotal mt-1\">\n                            Subtotal: $\n                            <span style={{fontWeight: \"bold\"}}>\n                                {/*uses reduce to get total price of all items in cart*/}\n                                {Object.keys(this.props.cart).reduce((a, b) =>\n                                    a + this.props.cart[b].item.price * this.props.cart[b].quantity,0)}\n                            </span>\n                        </h6>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}