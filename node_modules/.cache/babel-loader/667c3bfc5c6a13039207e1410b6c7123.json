{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sarahrockhill/Desktop/UIUX/development/src/FilteredList.js\";\nimport React from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DisplayList from './DisplayList';\nimport AggregateDisplay from './AggregateDisplay';\n/**\n * FilteredList displays the list of items, as well as allows for sorting,\n * and filtering. It also deals with the aggregating of the total amount of\n * time it takes to do all the activites added to the schedule.\n */\n\nclass FilteredList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectEnergyLevel = event => {\n      this.setState({\n        selected_energy_level: event\n      });\n    };\n\n    this.onSelectSort = event => {\n      this.setState({\n        selected_sort: event\n      });\n    };\n\n    this.onSelectFunLevel = event => {\n      this.setState({\n        selected_fun_level: event\n      });\n    };\n\n    this.matchesFilterEnergyLevel = item => {\n      // all items should be shown when no filter is selected\n      if (this.state.selected_energy_level === \"Any\") {\n        return true;\n      } //otherwise check if filter === current item's corresponding property\n      else if (this.state.selected_energy_level === item.energy_level) {\n          return true;\n        } else {\n          return false;\n        }\n    };\n\n    this.matchesFilterFunLevel = item => {\n      // all items should be shown when no filter is selected\n      if (this.state.selected_fun_level === \"Any\") {\n        return true;\n      } //otherwise check if filter === current item's corresponding property\n      else if (this.state.selected_fun_level === item.amount_of_fun) {\n          return true;\n        } else {\n          return false;\n        }\n    };\n\n    this.state = {\n      //track the current filter/sort state of the dropdown menus\n      selected_energy_level: \"Any\",\n      selected_sort: \"None\",\n      selected_fun_level: \"Any\",\n\n      /**list of all activities added to the schedule. holds activites in the\n      form of [activity, quantity] where activity is the dictionary that specifies the\n      details of an activity, and quantity is the number of times this activity\n       was added to the schedule**/\n      planned_activities: []\n    };\n  }\n\n  /**\n   * This function is called when the sort dropdown is clicked, and it\n   * returns the sort function that would sort the list according to\n   * whatever sort dropdown option is selected. The output of this function\n   * is passed into the sort function.\n   */\n  getSortFunction() {\n    var low_to_high = function (a, b) {\n      return a.duration - b.duration;\n    };\n\n    var high_to_low = function (a, b) {\n      return b.duration - a.duration;\n    };\n\n    if (this.state.selected_sort === 'High To Low') {\n      return high_to_low;\n    } else if (this.state.selected_sort === 'Low To High') {\n      return low_to_high;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * This function applies the above filter and sort functions\n   * to each item of the list, and returns a list\n   * that meets the filter and sort requirements specified in the\n   * dropdowns\n   */\n\n\n  applyFiltersAndSorts() {\n    var list = this.props.list.filter(this.matchesFilterEnergyLevel);\n    list = list.filter(this.matchesFilterFunLevel);\n    var sort_type = this.getSortFunction();\n\n    if (sort_type != null) {\n      list = list.sort(sort_type);\n    }\n\n    return list;\n  }\n  /**\n   * When an activity's \"add\" button is clicked, or the \"+\" button\n   * in the schedule it triggers this function which, given an activity,\n   * adds this activity to the planned_activitites state. This enables\n   * the user to add activities to their schedule.\n   */\n\n\n  addToPlannedActivities(item) {\n    var new_planned_activities = this.state.planned_activities; //iterates through the activities\n\n    for (var i = 0; i < new_planned_activities.length; i++) {\n      //if the activity is already present in the planned_activities list, add\n      //one to the quantity slot of planned_activities, and return\n      if (new_planned_activities[i][0] === item) {\n        new_planned_activities[i][1] += 1;\n        this.setState({\n          planned_activities: new_planned_activities\n        });\n        return;\n      }\n    } //if here, the activity was not already present in the planned_activities, so\n    //must add it, and set its quantity (the number of times it is in the schedule) to be 1\n\n\n    new_planned_activities.push([item, 1]);\n    this.setState({\n      planned_activities: new_planned_activities\n    });\n  }\n  /**\n   * When an activity's \"-\" button is clicked in the schedule\n   * it triggers this function which, given an activity,\n   * reduces the number of times this activity ooccurs in the planned_activitites state.\n   * This enables the user to remove activities from their schedule.\n   */\n\n\n  removeFromPlannedActivities(item) {\n    var new_planned_activities = this.state.planned_activities;\n\n    for (var i = 0; i < new_planned_activities.length; i++) {\n      //this item is in cart\n      if (new_planned_activities[i][0] === item) {\n        if (new_planned_activities[i][1] > 1) {\n          new_planned_activities[i][1] -= 1;\n        } //this item is in the cart and we want to remove it\n        else if (new_planned_activities[i][1] === 1) {\n            new_planned_activities.splice(i, 1);\n          }\n\n        this.setState({\n          planned_activities: new_planned_activities\n        });\n        return;\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row justify-content-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row justify-content-start dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column filter-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-center\",\n              children: \"Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-left\",\n              children: \"Too many options to choose? No problem, filter!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-inline-flex flex-column justify-content-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-left filter-header\",\n                children: \"Amount of Energy Activity Requires:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n                className: \"dropdown\",\n                id: \"dropdown-basic-button\",\n                title: this.state.selected_energy_level,\n                onSelect: this.onSelectEnergyLevel,\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"Any\",\n                  children: \"Any\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"High\",\n                  children: \"High\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"Medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"Low\",\n                  children: \"Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-inline-flex flex-column justify-content-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-left filter-header\",\n                children: \"How Fun Activity is Expected to be:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n                id: \"dropdown-basic-button\",\n                title: this.state.selected_fun_level,\n                onSelect: this.onSelectFunLevel,\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"Any\",\n                  children: \"Any\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"High\",\n                  children: \"Super Fun\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"Medium\",\n                  children: \"Eh, Kinda Fun\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  eventKey: \"Low\",\n                  children: \"Very unfun\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column sort-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-center\",\n              children: \"Sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-left\",\n              children: \"Want to find the longest possible activity, sort by activity duration!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-left filter-header\",\n              children: \"Sort by Activity's (Expected) Duration:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n              id: \"dropdown-basic-button\",\n              title: this.state.selected_sort,\n              onSelect: this.onSelectSort,\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"None\",\n                children: \"Any\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"High To Low\",\n                children: \"High To Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: \"Low To High\",\n                children: \"Low To High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-center\",\n          children: \"Add Activities to your \\\"Day In Quarantine\\\" Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DisplayList, {\n          list: this.applyFiltersAndSorts(),\n          addToPlannedActivities: this.addToPlannedActivities.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AggregateDisplay, {\n        planned_activities: this.state.planned_activities,\n        removeFromPlannedActivities: this.removeFromPlannedActivities.bind(this),\n        addToPlannedActivities: this.addToPlannedActivities.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FilteredList;","map":{"version":3,"sources":["/Users/sarahrockhill/Desktop/UIUX/development/src/FilteredList.js"],"names":["React","DropdownButton","Dropdown","DisplayList","AggregateDisplay","FilteredList","Component","constructor","props","onSelectEnergyLevel","event","setState","selected_energy_level","onSelectSort","selected_sort","onSelectFunLevel","selected_fun_level","matchesFilterEnergyLevel","item","state","energy_level","matchesFilterFunLevel","amount_of_fun","planned_activities","getSortFunction","low_to_high","a","b","duration","high_to_low","applyFiltersAndSorts","list","filter","sort_type","sort","addToPlannedActivities","new_planned_activities","i","length","push","removeFromPlannedActivities","splice","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DisplayList from './DisplayList';\nimport AggregateDisplay from './AggregateDisplay'\n\n/**\n * FilteredList displays the list of items, as well as allows for sorting,\n * and filtering. It also deals with the aggregating of the total amount of\n * time it takes to do all the activites added to the schedule.\n */\nclass FilteredList extends  React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          //track the current filter/sort state of the dropdown menus\n          selected_energy_level:\"Any\",\n          selected_sort: \"None\",\n          selected_fun_level: \"Any\",\n          /**list of all activities added to the schedule. holds activites in the\n          form of [activity, quantity] where activity is the dictionary that specifies the\n          details of an activity, and quantity is the number of times this activity\n           was added to the schedule**/\n          planned_activities: []\n        };\n    };\n\n    /**\n     *\n     * The following three functions are called when the dropdown\n     * menu is clicked, and they set the corresponding state of the\n     * dropdown menu\n     */\n    onSelectEnergyLevel = event => {\n        this.setState({\n            selected_energy_level: event\n        })\n    };\n    onSelectSort = event => {\n        this.setState({\n            selected_sort: event\n        })\n    };\n    onSelectFunLevel = event => {\n        this.setState({\n            selected_fun_level: event\n        })\n    };\n\n\n    /**\n     * The following two functions take in an item, and determine\n     * if that item is included in the selected filter. The first\n     * function looks at the energy level filter, while the\n     * second looks at the fun level filter.\n     */\n    matchesFilterEnergyLevel = item => {\n        // all items should be shown when no filter is selected\n        if(this.state.selected_energy_level === \"Any\") {\n            return true\n        }\n        //otherwise check if filter === current item's corresponding property\n        else if (this.state.selected_energy_level === item.energy_level) {\n            return true\n        }\n        else {\n            return false\n        }\n    };\n\n    matchesFilterFunLevel = item => {\n        // all items should be shown when no filter is selected\n        if(this.state.selected_fun_level === \"Any\") {\n            return true\n        }\n        //otherwise check if filter === current item's corresponding property\n        else if (this.state.selected_fun_level === item.amount_of_fun) {\n            return true\n        } else {\n            return false\n        }\n    };\n\n    /**\n     * This function is called when the sort dropdown is clicked, and it\n     * returns the sort function that would sort the list according to\n     * whatever sort dropdown option is selected. The output of this function\n     * is passed into the sort function.\n     */\n    getSortFunction() {\n        var low_to_high = function (a, b) {return a.duration - b.duration};\n        var  high_to_low = function (a, b) {return b.duration - a.duration};\n        if(this.state.selected_sort === 'High To Low'){\n            return high_to_low\n        }\n        else if(this.state.selected_sort === 'Low To High'){\n            return low_to_high\n        }\n        else {\n            return null\n        }\n    }\n\n    /**\n     * This function applies the above filter and sort functions\n     * to each item of the list, and returns a list\n     * that meets the filter and sort requirements specified in the\n     * dropdowns\n     */\n    applyFiltersAndSorts() {\n        var list = this.props.list.filter(this.matchesFilterEnergyLevel);\n        list = list.filter(this.matchesFilterFunLevel)\n        var sort_type = this.getSortFunction()\n        if(sort_type != null){\n            list = list.sort(sort_type)\n        }\n        return list\n\n    }\n\n    /**\n     * When an activity's \"add\" button is clicked, or the \"+\" button\n     * in the schedule it triggers this function which, given an activity,\n     * adds this activity to the planned_activitites state. This enables\n     * the user to add activities to their schedule.\n     */\n    addToPlannedActivities(item) {\n        var new_planned_activities = this.state.planned_activities\n        //iterates through the activities\n        for(var i = 0; i < new_planned_activities.length; i++){\n            //if the activity is already present in the planned_activities list, add\n            //one to the quantity slot of planned_activities, and return\n            if(new_planned_activities[i][0] === item){\n                new_planned_activities[i][1] += 1;\n                this.setState({\n                    planned_activities: new_planned_activities\n                })\n                return;\n            }\n        }\n        //if here, the activity was not already present in the planned_activities, so\n        //must add it, and set its quantity (the number of times it is in the schedule) to be 1\n        new_planned_activities.push([item, 1]);\n        this.setState({\n            planned_activities: new_planned_activities\n        })\n    }\n\n    /**\n     * When an activity's \"-\" button is clicked in the schedule\n     * it triggers this function which, given an activity,\n     * reduces the number of times this activity ooccurs in the planned_activitites state.\n     * This enables the user to remove activities from their schedule.\n     */\n    removeFromPlannedActivities(item) {\n        var new_planned_activities = this.state.planned_activities\n        for(var i = 0; i < new_planned_activities.length; i++){\n            //this item is in cart\n            if(new_planned_activities[i][0] === item) {\n\n                if (new_planned_activities[i][1] > 1) {\n                    new_planned_activities[i][1] -= 1;\n                }\n                //this item is in the cart and we want to remove it\n                else if (new_planned_activities[i][1] === 1) {\n                    new_planned_activities.splice(i, 1);\n                }\n                this.setState({\n                    planned_activities: new_planned_activities\n                })\n                return;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-row justify-content-start\">\n                <div>\n                    <div className=\"d-flex flex-row justify-content-start dropdown-container\">\n\n                        {/*This is the filter box, it contains all the filter dropdowns*/}\n                        <div className=\"d-flex flex-column filter-box\">\n                            <h5 className=\"text-center\">Filter</h5>\n                            <p className=\"text-left\">Too many options to choose? No problem, filter!</p>\n\n                            {/*Filter Dropdown for how much energy the activity requires */}\n                            <div className=\"d-inline-flex flex-column justify-content-start\">\n                                <div className=\"text-left filter-header\">Amount of Energy Activity Requires:</div>\n                                    <DropdownButton className=\"dropdown\" id=\"dropdown-basic-button\" title={this.state.selected_energy_level} onSelect={this.onSelectEnergyLevel}>\n                                        <Dropdown.Item eventKey='Any'>Any</Dropdown.Item>\n                                        <Dropdown.Item eventKey='High'>High</Dropdown.Item>\n                                        <Dropdown.Item eventKey='Medium'>Medium</Dropdown.Item>\n                                        <Dropdown.Item eventKey='Low'>Low</Dropdown.Item>\n                                    </DropdownButton>\n                            </div>\n\n                            {/*Filter Dropdown for how much fun the activity is likely to be */}\n                            <div className=\"d-inline-flex flex-column justify-content-start\">\n                                <div className=\"text-left filter-header\">How Fun Activity is Expected to be:</div>\n                                    <DropdownButton id=\"dropdown-basic-button\" title={this.state.selected_fun_level} onSelect={this.onSelectFunLevel}>\n                                        <Dropdown.Item eventKey='Any'>Any</Dropdown.Item>\n                                        <Dropdown.Item eventKey='High'>Super Fun</Dropdown.Item>\n                                        <Dropdown.Item eventKey='Medium'>Eh, Kinda Fun</Dropdown.Item>\n                                        <Dropdown.Item eventKey='Low'>Very unfun</Dropdown.Item>\n                                    </DropdownButton>\n                            </div>\n                        </div>\n\n                        {/*This is the sort box, it contains all the filter dropdowns */}\n                        <div className=\"d-flex flex-column sort-box\">\n                            <h5 className=\"text-center\">Sort</h5>\n                            <p className=\"text-left\">Want to find the longest possible activity, sort by activity duration!</p>\n                            <div className=\"text-left filter-header\">Sort by Activity's (Expected) Duration:</div>\n                            <DropdownButton id=\"dropdown-basic-button\" title={this.state.selected_sort} onSelect={this.onSelectSort}>\n                                <Dropdown.Item eventKey='None'>Any</Dropdown.Item>\n                                <Dropdown.Item eventKey='High To Low'>High To Low</Dropdown.Item>\n                                <Dropdown.Item eventKey='Low To High'>Low To High</Dropdown.Item>\n                            </DropdownButton>\n                        </div>\n\n                    </div>\n\n                    <h5 className=\"text-center\">Add Activities to your \"Day In Quarantine\" Schedule</h5>\n\n                    {/*This component displays the list of sorted, filtered, activities */}\n                    <DisplayList\n                        list={this.applyFiltersAndSorts()}\n                        addToPlannedActivities={this.addToPlannedActivities.bind(this)}>\n                    </DisplayList>\n                </div>\n\n                {/*This component deals with aggregating all the added activities together and displaying them*/}\n                <AggregateDisplay planned_activities={this.state.planned_activities}\n                                  removeFromPlannedActivities={this.removeFromPlannedActivities.bind(this)}\n                                  addToPlannedActivities={this.addToPlannedActivities.bind(this)}></AggregateDisplay>\n            </div>\n        )\n    }\n}\n\nexport default FilteredList;"]},"metadata":{},"sourceType":"module"}